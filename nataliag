#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int isvalid(int x,int y,int i,int j){
	if(x<0||x>=i||y<0||y>=j){
		return 0;
	}
	return 1;
}

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--){
		int m,n;
		cin>>n>>m;
		vector<vector<char>> arr(n,vector<char>(m,'q'));
		vector<vector<int>> visited(n,vector<int>(m,-1));
		vector<vector<int>> demoArr(n,vector<int>(m,0));
		int startx=-1,starty=-1;
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				cin>>arr[i][j];
				if(arr[i][j]=='$'){
					startx=i;
					starty=j;
				}
			}
		}
		int answer=INT_MAX;
		queue<pair<int,int>> q;
		q.push(make_pair(startx,starty));
		int dx[]={-1,1,0,0};
		int dy[]={0,0,-1,1};
		demoArr[startx][starty]=0;
		while(!q.empty()){
			pair<int,int> temp=q.front();
			int i=temp.first,j=temp.second;
			q.pop();
			int level=demoArr[i][j];
			for(int k=0;k<4;k++){
				if(isvalid(i+dx[k],j+dy[k],n,m)&&(visited[i+dx[k]][j+dy[k]]==-1)){
					if(arr[i+dx[k]][j+dy[k]]=='O'||arr[i+dx[k]][j+dy[k]]=='#'){
						visited[i+dx[k]][j+dy[k]]=1;
						demoArr[i+dx[k]][j+dy[k]]=level+1;
						q.push(make_pair(i+dx[k],j+dy[k]));
						if(arr[i+dx[k]][j+dy[k]]=='#'){
							answer=level+1;
							break;
						}
					}
				}
			}
			if(answer!=INT_MAX)
				break;
		}
		if(answer==INT_MAX)
			cout<<"-1\n";
		else
			cout<<answer<<"\n";
	}
	return 0;
}
