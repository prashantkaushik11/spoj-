#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int isvalid(int x,int y,int i,int j){
	if(x<0||x>=i||y<0||y>=j){
		return 0;
	}
	return 1;
}
void bfs(vector<vector<char>> &arr,vector<vector<int>> &visited,int level,int n,int m,int i,int j,int *ans){
	if(arr[i][j]=='#'){
		*ans=min(*ans,level);
		return;
	}
	int dx[]={-1,1,0,0};
	int dy[]={0,0,-1,1};
	for(int k=0;k<4;k++){
		if(isvalid(i+dx[k],j+dy[k],n,m)&&(visited[i+dx[k]][j+dy[k]]==-1)){
			if(arr[i+dx[k]][j+dy[k]]=='O'||arr[i+dx[k]][j+dy[k]]=='#'){
				visited[i+dx[k]][j+dy[k]]=1;
				bfs(arr,visited,level+1,n,m,i+dx[k],j+dy[k],ans);
			}
		}
	}
}
int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--){
		int m,n;
		cin>>n>>m;
		vector<vector<char>> arr(n,vector<char>(m,'q'));
		vector<vector<int>> visited(n,vector<int>(m,-1));
		int startx=-1,starty=-1;
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				cin>>arr[i][j];
				if(arr[i][j]=='$'){
					startx=i;
					starty=j;
				}
			}
		}
		int ans=INT_MAX;
		visited[startx][starty]=1;
		bfs(arr,visited,0,n,m,startx,starty,&ans);
	}
	return 0;
}
