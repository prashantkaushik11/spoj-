#include <iostream>
#include<bits/stdc++.h>
using namespace std;
long long int createDp(vector<vector<long long int>> &dp,vector<long long int> &arr,int i,int j,int k){
	if(i>j)
		return 0;
	if(dp[i][j]!=-1)
		return dp[i][j];
	return dp[i][j]=max(createDp(dp,arr,i+1,j,k+1)+arr[i]*k,createDp(dp,arr,i,j-1,k+1)+arr[j]*k);
}
int main() {
	// your code goes here
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	long long int n;
	cin>>n;
	vector<long long int> arr(n);
	for(long long int i=0;i<n;i++){
		cin>>arr[i];
	}
	vector<vector<long long int>> dp(n,vector<long long int>(n,-1));
	cout<<createDp(dp,arr,0,n-1,1);
	return 0;
}
